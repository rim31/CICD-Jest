{"version":3,"sources":["components/utils/Currency.tsx","components/Counter/Counter.tsx","components/Weather/Weather.tsx","components/Weather/SevenDays.tsx","components/Weather/Forecast.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["convert","base","destination","a","fetch","result","json","data","rates","Counter","React","useState","counter","setCounter","id","style","border","borderRadius","padding","onClick","API_KEY","ForecastSevenDays","lat","lon","axios","get","response","console","error","FetchData","query","params","q","units","APPID","SevenDays","props","state","weatherSevenDays","className","display","flexWrap","overflowX","boxSizing","whiteSpace","flexDirection","hourly","map","day","i","key","flex","justifyContent","backgroundColor","width","minHeight","Math","round","temp","src","weather","icon","alt","description","color","fontSize","moment","add","format","daily","Forecast","isoCode","setQuery","location","setLocation","setWeather","setWeatherSevenDays","isLoading","setIsLoading","search","e","toLowerCase","res","coord","clickSearch","useEffect","main","data-location","data-wind","data-temperature","data-precipitation","name","sys","country","String","fromCodePoint","toUpperCase","replace","char","charCodeAt","type","placeholder","value","onChange","target","onKeyPress","max","App","conversion","setConversion","collapse","setCollapse","fetchData","background","href","parseFloat","toFixed","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","log","onUpdate","onSuccess","catch","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","headers","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.a1f45acf.chunk.js","sourcesContent":["async function convert(base: any, destination: any) {\n  try {\n    const result: any = await fetch(\n      `https://api.exchangeratesapi.io/latest?base=${base}`\n    );\n    const data: any = await result.json();\n    return data.rates[destination];\n  } catch (e) {\n    return null;\n  }\n}\n\nexport { convert };","import React from 'react'\n\nexport default function Counter() {\n  const [counter, setCounter] = React.useState<number>(0);\n\n  return (\n    <div>\n      <h1>Counter</h1>\n      <button id=\"increment-btn\" style={{ border: \"1px solid yellow\", borderRadius: \"8px\", padding: \"3px 3px\" }}\n        onClick={() => setCounter(counter + 1)}>Increment</button>\n      <button id=\"decrement-btn\" style={{ border: \"1px solid yellow\", borderRadius: \"8px\", padding: \"3px 3px\" }}\n        onClick={() => setCounter(counter > 0 ? counter - 1 : 0)}>Decrement</button>\n      <div id=\"counter-value\">{counter}</div>\n    </div>\n  )\n}\n","import axios from 'axios';\n\nconst URL: string = 'https://api.openweathermap.org/data/2.5/weather';\nconst API_KEY: string = 'f33a484cf794d08d0148764789aaba32';\n\n// fetch data of 7 days\nexport const ForecastSevenDays = async (lat: string, lon: string) => {\n  try {\n    const response: any = await axios.get(\n      \"https://api.openweathermap.org/data/2.5/onecall?lat=\" + lat + \"&lon=\" + lon + \"&units=metric&exclude=minutely&appid=\" + API_KEY\n    );\n    if (response) {\n      return response;\n    } else {\n      return \"\";\n    }\n  } catch (e) {\n    console.error(e.error);\n  }\n}\n\n// to get the lon lat and then send to the forecast of 1 week, otherwise, we can just have the current weather\nconst FetchData = async (query: any) => {\n  try {\n    const response: any = await axios.get(URL, {\n      params: {\n        q: query,\n        units: 'metric',\n        APPID: API_KEY\n      }\n    });\n    if (response) {\n      return response;\n    } else {\n      return \"\";\n    }\n  } catch (e) {\n    console.error(e.error);\n  }\n}\nexport default FetchData;\n\n","import React from 'react';\nimport moment from \"moment\";\n\n\n\nexport default function SevenDays(props: any) {\n  let state: any = props.weatherSevenDays;\n\n  return (\n    <div className=\"block\">\n      {state.data && (<p className=\"title mt-2\">48h</p>)}\n      <div className=\"ml-1 mr-1\" style={{\n        display: \"flex\", flexWrap: \"nowrap\", overflowX: \"auto\", boxSizing: \"border-box\", whiteSpace: \"break-spaces\", flexDirection: \"row\",\n      }}>\n        {\n          state.data && (\n            state.data.hourly.map((day: any, i: number) =>\n              <div key={i} className=\"ml-1 mr-1\" style={{ flex: \"0 0 auto\", padding: \"0px 2px 0px 2px\", justifyContent: \"center\" }}>\n                < div style={{ backgroundColor: \"aquamarine\", width: '110px', minHeight: \"204px\", borderRadius: \"8px\" }}>\n                  <div className=\"city-temp\">\n                    {Math.round(day.temp)}<sup>°C</sup>\n                  </div>\n                  <div className=\"info\">\n                    <img className=\"city-icon\" src={`https://openweathermap.org/img/wn/${day.weather[0].icon}@2x.png`} alt={day.weather[0].description} />\n                    <p style={{ color: \"grey\" }}>{day.weather[0].description}</p>\n                  </div>\n                  <p style={{ fontSize: \"1rem\", }}>{moment().add(i, 'hours').format(\"LT\")}</p>\n                </div>\n              </div >\n            )\n          )\n        }\n      </div >\n      {state.data && (<p className=\"title mt-2\">7 days </p>)}\n      <div className=\"columns is-centered\">\n        <div className=\"column is-mobile is-tablet is-half\">\n          {\n            state.data && (\n              state.data.daily.map((day: any, i: number) => <div key={i} className=\"d-flex mb-1\">\n                <div className=\"card\">\n                  <div className=\"card-image\">\n                  </div>\n                  <div className=\"card-content\">\n                    <div className=\"media\">\n                      <div className=\"media-content has-text-left rows is-full\">\n                        <time><div className=\"subtitle row\">{moment().add(i, 'days').format(\"dddd\")}</div></time>\n                        <time><div> {moment().add(i, 'days').format(\"MMMM Do\")}</div></time>\n                      </div>\n                      <div className=\"media-content rows has-text-right is-full\">\n                        <div className=\"subtitle is-6 row\">{day.weather[0].description}</div>\n                        <div className=\"title is-4 row\">{Math.round(day.temp.day)}<sup>°C</sup> </div>\n                      </div>\n                      <div className=\"media-right \">\n                        <figure className=\"image is-128x128\">\n                          <img className=\"city-icon\" src={`https://openweathermap.org/img/wn/${day.weather[0].icon}@2x.png`} alt={day.weather[0].description} />\n                        </figure>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              )\n            )\n          }\n        </div >\n      </div >\n    </div >\n  );\n}\n","import React, { useState } from 'react'\nimport FetchData, { ForecastSevenDays } from './Weather';\nimport SevenDays from './SevenDays';\nimport moment from 'moment';\n// ISO 3166-1 alpha-2\n// ⚠️ No support for IE 11 - country Flag with isoCode\nfunction countryToFlag(isoCode: any) {\n  return typeof String.fromCodePoint !== 'undefined'\n    ? isoCode\n      .toUpperCase()\n      .replace(/./g, (char: any) => String.fromCodePoint(char.charCodeAt(0) + 127397))\n    : isoCode;\n}\n\nexport default function Forecast() {\n  const [query, setQuery] = useState<string>(\"\")\n  const [location, setLocation] = useState<string>(\"\")// for the click button search\n  const [weather, setWeather] = useState<any>(\"\")\n  const [weatherSevenDays, setWeatherSevenDays] = useState<any>(\"\")\n  const [isLoading, setIsLoading] = useState(false);\n\n  // for pressing enter\n  const search = async (e: any) => {\n    if (e.key === \"Enter\" && query) {\n      setIsLoading(true);\n      const res: any = await FetchData(query.toLowerCase());\n      if (res) {\n        setWeather(res.data);\n        const response = await ForecastSevenDays(res.data.coord.lat, res.data.coord.lon);\n        setWeatherSevenDays(response);\n      }\n      setQuery('');\n      setLocation('');\n      setIsLoading(false);\n    }\n  }\n\n  // for the click button search\n  const clickSearch = async (e: any) => {\n    if (location) {\n      setIsLoading(true);\n      const res: any = await FetchData(location.toLowerCase());\n      if (res) {\n        setWeather(res.data);\n        const response = await ForecastSevenDays(res.data.coord.lat, res.data.coord.lon);\n        setWeatherSevenDays(response);\n        setQuery('');\n        setLocation('');\n      }\n      setIsLoading(false);\n    }\n  }\n\n  React.useEffect(() => {\n    clickSearch(location);\n    // eslint-disable-next-line\n  }, [location])\n  return (\n    <div className=\"main-container\">\n      <div className=\"container\">\n        <div className=\"header\">\n          <div className=\"icon-container\">\n            {weather.main ?\n              <img className=\"city-icon\" src={`https://openweathermap.org/img/wn/${weather.weather[0].icon}@2x.png`} alt={weather.weather[0].description} />\n              : <span className=\"icon\"><i className=\"fas fa-home\"></i></span>\n            }\n          </div>\n        </div>\n        <div className=\"content\">\n          <div className=\"general-information\">\n            <span className=\"icon\">\n              <i className=\"fas fa-home\"></i>\n            </span>\n            <div id=\"titleForecast\" className=\"location\" data-location>Weather in a city</div>\n            <p className=\"subtitle\">{moment().format(\"dddd, MMMM Do YYYY\")}</p>\n          </div>\n          <div className=\"columns \">\n            <div className=\"detail column\" style={{ backgroundColor: \"whitesmoke\" }}>\n              <div className=\"subtitle\">Now</div>\n              <div className=\"value\" data-wind>{weather.main && (<p style={{ color: \"grey\" }}>{weather.weather[0].description}</p>\n              )}</div>\n            </div>\n            <div className=\"detail column\" >\n              <div className=\"subtitle\" style={{ whiteSpace: \"nowrap\", }}>Temperature</div>\n              <div className=\"value\" data-temperature>{weather.main && (<p>{Math.round(weather.main.temp)}<sup>°C</sup></p>)}</div>\n            </div>\n            <div className=\"detail column\" style={{ backgroundColor: \"whitesmoke\" }}>\n              <div className=\"subtitle\">City</div>\n              <div className=\"value\" data-precipitation>\n                {weather.main && (<div>\n                  <span className=\"value\">{weather.name}</span>\n                  <sup className=\"subtitle\">{weather.sys.country} {countryToFlag(weather.sys.country)}</sup>\n                </div>)}\n              </div>\n            </div>\n          </div>\n          <label className=\"text-center subtitle\" >Search a city's weather</label>\n          <div className=\"city-search-container mt-3\">\n            <div className=\"field has-addons has-addons-centered\">\n              <div className=\"control\">\n                <input id=\"cityInput2\" className=\"input\" type=\"text\" placeholder=\"City...\" value={query} style={{ border: \"1px solid black\" }}\n                  onChange={(e) => { setQuery(e.target.value); setLocation(e.target.value); }} onKeyPress={search} />\n              </div>\n              <div className=\"control\">\n                <button id=\"btn-search\" className=\"button is-info\"\n                  onClick={(e: any) => { clickSearch(location) }}>Search</button>\n              </div>\n            </div>\n          </div>\n          <br/>\n        <div className=\"columns \">\n            <div className=\"detail column\" style={{ backgroundColor: \"whitesmoke\" }}>\n              <div className=\"control\">\n                  <button id=\"btn-search\" className=\"button is-secondary\"\n                    onClick={(e: any) => { setLocation('Turku') }}>Turku</button>\n              </div>\n            </div>\n            <div className=\"detail column\"  style={{ backgroundColor: \"whitesmoke\" }}>\n              <div className=\"control\">\n                <button id=\"btn-search\" className=\"button is-secondary\"\n                  onClick={(e: any) => { setLocation('Toulouse') }}>Toulouse</button>\n              </div>\n            </div>\n            <div className=\"detail column\" style={{ backgroundColor: \"whitesmoke\" }}>\n              <div className=\"control\">\n                <button id=\"btn-search\" className=\"button is-secondary\"\n                  onClick={(e: any) => { setLocation('Paris') }}>Paris</button>\n              </div>\n          </div>\n          </div>\n        </div>\n      </div>\n      { isLoading && (<progress className=\"progress is-small is-primary\" max=\"100\">loading</progress>)}\n      <SevenDays weatherSevenDays={weatherSevenDays} />\n    </div >\n  )\n}\n","import React from 'react';\nimport './App.css';\nimport 'bulma/css/bulma.css'\nimport { convert } from './components/utils/Currency';\n// import Button from './components/button/Button';\nimport Counter from './components/Counter/Counter';\nimport Forecast from './components/Weather/Forecast';\n\n\nfunction App() {\n  const [conversion, setConversion] = React.useState<string>(\"\");\n  const [counter, setCounter] = React.useState<number>(0);\n  const [collapse, setCollapse] = React.useState<Boolean>(false);\n\n  React.useEffect(() => {\n    const fetchData = async () => {\n      const result: string = await convert(\"USD\", \"EUR\")\n      setConversion(result);\n    }\n    (fetchData());\n  }, [])\n  return (\n    <div className=\"App\">\n      {/* <header className=\"App-header\">header</header> */}\n      <div className=\"\" style={{\n        background: `linear-gradient(to right, rgb(255, 167, 35), rgb(25, 97, 235))`,\n        minHeight: \"100vh\"\n      }}>\n\n        <Forecast />\n        <a href=\"#myCard\">\n          <button id=\"conversionHeader\" type=\"button\" className=\"collapsible mt-5 has-text-centered\" onClick={() => setCollapse(!collapse)}>\n            Open Conversion $/€ debug<i className=\"fa fa-caret-square-o-down\"></i>\n          </button>\n        </a>\n        {collapse && (<div className=\"content\">\n          <div className=\"card\" id=\"myCard\">\n            <Counter />\n            <h1 id=\"titleConversion\">conversion rate : $ USD - € EUR</h1>\n            <h3>{conversion ? conversion : ''} : rate $ / €</h3>\n            <h2>CI-CD</h2>\n            {/* <Button label=\"click me please\"></Button> \n                <p> Edit <code>src/App.tsx</code> and save to reload.</p> */}\n            <div className=\"d-inline-flex p-2\">\n              <button id=\"increment-btn\" className=\"button mr-2\" style={{ border: \"1px solid yellow\", borderRadius: \"8px\", padding: \"3px 3px\" }}\n                onClick={() => setCounter(counter + 1)}>+ Increment</button>\n              <button id=\"decrement-btn\" className=\"button\" style={{ border: \"1px solid yellow\", borderRadius: \"8px\", padding: \"3px 3px\" }}\n                onClick={() => setCounter(counter > 0 ? counter - 1 : 0)}>- Decrement</button>\n            </div>\n            <p>Conversion {(counter / parseFloat(conversion)).toFixed(2)} $</p>\n            <div className=\"d-inline-flex p-2\">\n              <span id=\"counter-value\">{counter}</span>\n              <span> €</span>\n            </div>\n            {/* <Button label=\"from App\" /> */}\n          </div>\n        </div>)}\n\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}